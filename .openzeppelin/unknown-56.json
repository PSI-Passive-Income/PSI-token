{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4C12E07F5Fa5C8a5c34118cc5ea9274A68E0F6F7",
    "txHash": "0x4adfa920375eee51579fc6f3723204ec618da8092dc84c3d700bcef5e6b5262e"
  },
  "proxies": [
    {
      "address": "0x6e70194F3A2D1D0a917C2575B7e33cF710718a17",
      "txHash": "0xb6db23ca18dfafdd8726172280b3b78e3d93952094a336dfc25f38c0a9e850f6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "77110a5645f2609645d72f476d7696803b17dd525d47ccdc014458dceb737279": {
      "address": "0xbD5454BAE9BAd69CB2Ea4840D38bc31f080cdAeC",
      "txHash": "0xf58bfa70f69338f16a90efc11f5139560b5bdc7f6534108f1bc6793335fae777",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PSIGovernance",
            "label": "governanceLevels",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PSIGovernance.sol:25"
          },
          {
            "contract": "PSIGovernance",
            "label": "gasToken",
            "type": "t_address",
            "src": "contracts\\PSIGovernance.sol:30"
          },
          {
            "contract": "PSIGovernance",
            "label": "enableGasPromotion",
            "type": "t_bool",
            "src": "contracts\\PSIGovernance.sol:35"
          },
          {
            "contract": "PSIGovernance",
            "label": "router",
            "type": "t_address",
            "src": "contracts\\PSIGovernance.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7fd69556423ab3252097a52034c5336e405de37648676c6fa6c8d21703958bfa": {
      "address": "0x19D1D09CF77261CA9aD70B4Be25d02F861B36D7d",
      "txHash": "0xefda556ce5f8601f7f854af84ab58ccfd20579c805a0839d20e6af16d65bfa83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "Governable",
            "label": "gov_contract",
            "type": "t_address",
            "src": "contracts\\abstracts\\Governable.sol:13"
          },
          {
            "contract": "FeeAggregator",
            "label": "_feeTokens",
            "type": "t_struct(AddressSet)1575_storage",
            "src": "contracts\\FeeAggregator.sol:24"
          },
          {
            "contract": "FeeAggregator",
            "label": "psi",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:29"
          },
          {
            "contract": "FeeAggregator",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:33"
          },
          {
            "contract": "FeeAggregator",
            "label": "dpexFee",
            "type": "t_uint256",
            "src": "contracts\\FeeAggregator.sol:37"
          },
          {
            "contract": "FeeAggregator",
            "label": "tokensGathered",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeAggregator.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)1575_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1310_storage"
              }
            ]
          },
          "t_struct(Set)1310_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4a3b6e7b7e60b9369461493e6e0f14e16a9820a978e6632bb5098e21087a20e5": {
      "address": "0x9E199d6528B8c340F41Cb44f312E67c956Bcc178",
      "txHash": "0xd37760e29654af5f6c5c1fc8afc2c4bb655dd5b545dadb7aba4419fa44692d84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "Governable",
            "label": "gov_contract",
            "type": "t_address",
            "src": "contracts\\abstracts\\Governable.sol:13"
          },
          {
            "contract": "FeeAggregator",
            "label": "_feeTokens",
            "type": "t_struct(AddressSet)2066_storage",
            "src": "contracts\\FeeAggregator.sol:24"
          },
          {
            "contract": "FeeAggregator",
            "label": "psi",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:29"
          },
          {
            "contract": "FeeAggregator",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:33"
          },
          {
            "contract": "FeeAggregator",
            "label": "dpexFee",
            "type": "t_uint256",
            "src": "contracts\\FeeAggregator.sol:37"
          },
          {
            "contract": "FeeAggregator",
            "label": "tokensGathered",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeAggregator.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)2066_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1801_storage"
              }
            ]
          },
          "t_struct(Set)1801_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86d725bfebb36811147d1e73618e5bf526ec002decb5c528c45d59ac72c00cb0": {
      "address": "0x2483ce15052c38d925e22010b9ac2703438cAD27",
      "txHash": "0x7591da6a375b2f113388916bed50263907698f8c6ab1a5067949feba8cf1818f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "Governable",
            "label": "gov_contract",
            "type": "t_address",
            "src": "contracts\\abstracts\\Governable.sol:13"
          },
          {
            "contract": "FeeAggregator",
            "label": "_feeTokens",
            "type": "t_struct(AddressSet)1575_storage",
            "src": "contracts\\FeeAggregator.sol:24"
          },
          {
            "contract": "FeeAggregator",
            "label": "psi",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:29"
          },
          {
            "contract": "FeeAggregator",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:33"
          },
          {
            "contract": "FeeAggregator",
            "label": "dpexFee",
            "type": "t_uint256",
            "src": "contracts\\FeeAggregator.sol:37"
          },
          {
            "contract": "FeeAggregator",
            "label": "tokensGathered",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeAggregator.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)1575_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1310_storage"
              }
            ]
          },
          "t_struct(Set)1310_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b213e314d19937a35babda14b7f010c7044ae9c5b6d410ad280ff801b9bbfc82": {
      "address": "0xddc5F3E8a8A56563b43e3a0545DB2449cFe627CA",
      "txHash": "0x1a36845d33d8048fc78385def07708416e3c425ae0b494af860bf7993ea7ba6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "Governable",
            "label": "gov_contract",
            "type": "t_address",
            "src": "contracts\\abstracts\\Governable.sol:13"
          },
          {
            "contract": "FeeAggregator",
            "label": "_feeTokens",
            "type": "t_struct(AddressSet)1009_storage",
            "src": "contracts\\FeeAggregator.sol:20"
          },
          {
            "contract": "FeeAggregator",
            "label": "psi",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:25"
          },
          {
            "contract": "FeeAggregator",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\FeeAggregator.sol:29"
          },
          {
            "contract": "FeeAggregator",
            "label": "dpexFee",
            "type": "t_uint256",
            "src": "contracts\\FeeAggregator.sol:33"
          },
          {
            "contract": "FeeAggregator",
            "label": "tokensGathered",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeAggregator.sol:37"
          }
        ],
        "types": {
          "t_struct(AddressSet)1009_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)708_storage"
              }
            ]
          },
          "t_struct(Set)708_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2d1658125e11a1cdd33ad2e4143df4a54153b55a12013da661c0f7def513014": {
      "address": "0x253bcE9B10BD8cd006904375B43255f346c72110",
      "txHash": "0x8477a377219ffb1b5a235542aadb67039c8d4a9a3bce617adaf41b0311851622",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1598_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "PSI",
            "label": "_reflectedOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PSI.sol:19"
          },
          {
            "contract": "PSI",
            "label": "_totalOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PSI.sol:20"
          },
          {
            "contract": "PSI",
            "label": "_addressesExcludedFromFeeRetrieval",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PSI.sol:22"
          },
          {
            "contract": "PSI",
            "label": "_addressesExcludedFromFeePayment",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PSI.sol:23"
          },
          {
            "contract": "PSI",
            "label": "_addressesExcludedFromDexFeePayment",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PSI.sol:24"
          },
          {
            "contract": "PSI",
            "label": "reflectionFee",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:26"
          },
          {
            "contract": "PSI",
            "label": "liquidityBuyFee",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:27"
          },
          {
            "contract": "PSI",
            "label": "liquiditySellFee",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:28"
          },
          {
            "contract": "PSI",
            "label": "swapTokensAtAmount",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:29"
          },
          {
            "contract": "PSI",
            "label": "_maxWithReflection",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:33"
          },
          {
            "contract": "PSI",
            "label": "_currentWithoutReflection",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:34"
          },
          {
            "contract": "PSI",
            "label": "_totalExcludedWithoutReflection",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:35"
          },
          {
            "contract": "PSI",
            "label": "_totalExcludedWithReflection",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:36"
          },
          {
            "contract": "PSI",
            "label": "totalReflectionFees",
            "type": "t_uint256",
            "src": "contracts\\PSI.sol:37"
          },
          {
            "contract": "PSI",
            "label": "swapEnabled",
            "type": "t_bool",
            "src": "contracts\\PSI.sol:39"
          },
          {
            "contract": "PSI",
            "label": "oldPsiContract",
            "type": "t_address",
            "src": "contracts\\PSI.sol:40"
          },
          {
            "contract": "PSI",
            "label": "defaultDexRouter",
            "type": "t_contract(IDEXRouter)4257",
            "src": "contracts\\PSI.sol:42"
          },
          {
            "contract": "PSI",
            "label": "defaultPair",
            "type": "t_address",
            "src": "contracts\\PSI.sol:43"
          },
          {
            "contract": "PSI",
            "label": "dexPairs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PSI.sol:44"
          },
          {
            "contract": "PSI",
            "label": "liquidityWallet",
            "type": "t_address",
            "src": "contracts\\PSI.sol:45"
          },
          {
            "contract": "PSI",
            "label": "_isSwappingFees",
            "type": "t_bool",
            "src": "contracts\\PSI.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IDEXRouter)4257": {
            "label": "contract IDEXRouter"
          },
          "t_mapping(t_address,t_struct(Counter)1598_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1598_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
